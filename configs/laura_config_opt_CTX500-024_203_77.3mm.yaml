# Location of stored data
data_path: /project/3023001.06/Simulations/kenneth_test/
simnibs_bin_path: /home/mrphys/kenvdzee/SimNIBS-4.0/bin/
subject_subfolder: 1
output_location: /project/3023001.06/Simulations/kenneth_test/laura_bob/

overwrite_simnibs: 0

# Structure of subfolders containing T1 and T1 images
## It is easier to store the subject data of each participant in an individual subfolder
t1_path_template: sub-%1$03d/t1.nii.gz
t2_path_template: sub-%1$03d/t2.nii.gz

transducer: 
  n_elements: 4 # number of elements in the transducer
  Elements_ID_mm: [0, 31.6988, 44.2688, 53.6688]
  Elements_OD_mm: [31.14, 43.71, 53.11, 60.83]
  curv_radius_mm: 62.94 # radius of curvature of the bowl 
  dist_to_plane_mm: 52.38 # distance to the transducer plane from the geometric focus
  source_amp: 98300 # [Pa] 
  source_phase_deg: [0.000000, 260.490253, 185.339583, 142.358665] # Source phase [deg]
  source_freq_hz: 500e3 # [Hz] the central frequency

expected_focal_distance_mm: 77.3 # expected distance to the stimulation focus
transducer_from_localite: 0 # should we load the transducer locations from the localite file(s) 

using_donders_hpc: 1 # are the simulations run on the HPC cluster?

use_forceqform: 1
run_posthoc_water_sims: 1
run_heating_sims: 0

thermal:
  duty_cycle: 0.3 # share of the stimulation duration during which the stimulation is on [0 to 1] (trial length = duty_cycle * stim_duration)
  iti: 14 # [s] interval between the trials, from the start of one trial to the start of another
  n_trials: 60 # number of trials to simulate; the total simulated duration is then n_trials*iti seconds
  stim_duration: 1 # [s] stimulation duration within a trial
  # Pulse repetition frequency is not used since the cooling effects between these cycles are limited

  # These should only be changed if they don't meet the criteria described in "run_heating_simulations"
  sim_time_steps: 0.01 # [s] simulation time steps during the stimulation period
  post_stim_time_step_dur: 0.1 # post-stimulation (inter-trial) steps
  on_off_step_duration: 0.1 # duration of the on+off cycle (e.g., with a duty cycle of 0.3 and 0.01 s time steps for simulation, the whole on+off cycle will take 0.1 s)
  equal_steps: 0 # is the duration of the simulation steps equal for on and off steps? if not, it is computed based on the sim_time_steps * n_steps where n_steps is the needed number of on and off steps derived from the duty cycle