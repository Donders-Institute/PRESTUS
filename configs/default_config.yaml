# The configuration is structured using YAML (https://yaml.org/). Note that YAML uses spaces, not tabs, for identation.

# !!! Important !!! Do not edit this document. Instead, copy (at least) the first segment into your own config file.

#------------ This first segment of the config contains parameters mandatory for running a pipeline

# Paths to the data location and SimNIBS environment (please use full paths)
data_path: NA
#simnibs_bin_path: /home/neuromod/julkos/SimNIBS/bin

# Paths to T1 and T2 relative to data_path; all string substitutions will be done using subject_id
# t1_path_template: sub-%1$03d_orig_T1w.nii.gz 
# t2_path_template: sub-%1$03d_orig_T2w.nii.gz

# select which medium setup to use: 'water' or 'layered' (a layered medium consists of several layers defined below)
simulation_medium: layered

# Labels for layered simulation, assuming for now the SimNIBS masks indices;
# Note that the labels are applied in the order specified here, so the skull should normally be the last as it matters the most
# This labeling scheme assumes the outputs of charm in SimNIBS
# You can remove or add layers. If you want a skull-only simulation, you can remove brain and skin for example.

layer_labels:
  water: [0, 3, 6, 9, 10] # this isn't really neccessary as water is a default layer - all that has a number not used for other layers will be water
  brain: [1, 2]
  skin: [5]
  skull_cortical: [7] 
  skull_trabecular: [8]

# If you are using headreco, those are the labels you probably want. 
# layer_labels:  
#  water: [0, 6, 7, 8]
#  brain: [1, 2]
#  skin: [5]
#  skull: [4]

# It is safer if we additionally include labels for segmentations, otherwise hardcoded values will be used
seg_labels:
  csf: [3]
  bonemask: [1,2,3,4,7,8,9]
  eye: [6]
  
# Parameters differ for each transducer and can be obtained from the manufacturer
# transducer:
#   n_elements: 4 # Number of elements in the transducer
#   Elements_ID_mm: [0, 32.9184, 46.1264, 56.0324] # Inner diameter of each element
#   Elements_OD_mm: [32.3596, 45.5676, 55.5244, 64.008] # Outer diameter of each element
#   curv_radius_mm: 63.20 # Radius of curvature of the bowl 
#   dist_to_plane_mm: 52.38 # Distance to the transducer plane from the geometric focus
#   source_amp: 91590 # [Pa] 
#   source_phase_deg: [0.0, 13.2, 26.4, 52.8] # Source phase [deg] 
#   source_freq_hz: 250e3 # [Hz] The central frequency
#   pos_t1_grid: [128, 139, 15] # Position on T1 grid [T1 grid space] (can be left out if importing location data)

# Stimulation target on T1 grid [T1 grid space] (again, can be left out if importing location data)
# focus_pos_t1_grid: [128, 142, 75]

# Important to note: the alpha values in 'alpha_0_true' are currently set for 500KHz transducers
# These should be adjusted to the values shown in their respected comments below the medium parameters
# We are still not entirely sure what alpha values best to use, so be critical of our and your own choices

#------------ This second segment contains parameters that can be used based on the specific needs of the analysis

# Should output be ordered based on subject id?
subject_subfolder: 1

# Optional affix for result files names
results_filename_affix: ''

# This allows you to add additional paths and subpaths while running the pipeline
paths_to_add: []
subpaths_to_add: []

# By default, SimNIBS segmentation results are not overwritten, unless enabled here
overwrite_simnibs: 0

# Can allow to only run specific components of the pipeline
run_source_setup: 1 # Should we set up acoustic source? useful to switch off to look at initial segmentation results only
run_acoustic_sims: 1 # Should we run the acoustic simulations? useful to switch off to look at initial segmentation results only
run_heating_sims: 0 # Should we run the heating simulations? useful to switch off to look at initial segmentation results only
run_posthoc_water_sims: 0 # Should we run the simulations in free water with exactly the same parameter? useful for double checking that the true intensity matches the desired one

# In interactive mode (1), the figures are shown and confirmation dialogs appear (the latter of which will halt the pipeline until confirmation)
# In non-interactive mode (0), no plots are shown and no confirmation dialogs will 
interactive: 1
# Needs to be included if running in a non-interactive mode
overwrite_files: ask # 'never' to never overwrite, 'always' to always overwrite, any other value to ask for confirmation

# Should the script position_transducer_localite be used?
transducer_from_localite: 0
# Allows one to correct for varying distances between the infrared trackers attached to the transducer and the exit plane
reference_transducer_distance_mm: 15 # (can only be used wit the function 'transducer_from_localite')

# Grid resolution (must be isotropic) 
grid_step_mm: 0.5  # [mm]

# These only need to be set manually if the simulations are done for water only
# Select the desired simulation grid size (number of points per dimension)
default_grid_size: 144
default_grid_dims: [144, 144, 256]

# Medium properties, references: ITRUSST benchmarks (https://arxiv.org/abs/2202.04552); Tissue Properties DB (https://itis.swiss/virtual-population/tissue-properties/overview/);
# Note: defined at 500 kHz, use with abundant caution, see https://github.com/Donders-Institute/PRESTUS/issues/40!
medium:
  water:
    sound_speed: 1500 # [m/s] ITRUSST benchmarks 
    density: 994 # [kg/m^3] Tissue Properties DB or waterDensity(37) function in kWave
    alpha_0_true: 2.17e-3  # k-Plan https://dispatch.k-plan.io/static/docs/simulation-pipeline.html#evaluating-plans
    alpha_power_true: 2 # k-Plan
    thermal_conductivity: 0.60 # [W/m/°C] Tissue Properties DB
    specific_heat_capacity: 4178 # [J/kg/°C] Tissue Properties DB
  skull: # cortical bone 
    sound_speed: 2800 # [m/s], ITRUSST benchmarks 
    density: 1850 # [kg/m^3], ITRUSST benchmarks
    alpha_0_true: 13.3 # Pinton et al., 2011
    alpha_power_true: 1 # k-Plan
    thermal_conductivity: 0.32 # [W/m/°C] Tissue Properties DB 
    specific_heat_capacity: 1313 # [J/kg/°C] Tissue Properties DB
  brain:
    sound_speed: 1546 # [m/s] Tissue Properties DB 
    density: 1046 # [kg/m^3], ITRUSST benchmarks or waterDensity(temp_0)
    alpha_0_true: 0.59 # k-Plan
    alpha_power_true: 1.2 # k-Plan
    thermal_conductivity: 0.51 # [W/m/°C] Tissue Properties DB 
    specific_heat_capacity: 3630 # [J/kg/°C] Tissue Properties DB
  skin:
    sound_speed: 1610 # [m/s], ITRUSST benchmarks 
    density: 1090 # [kg/m^3], ITRUSST benchmarks
    alpha_0_true: 0.4 # ITRUSST benchmarks
    alpha_power_true: 1
    thermal_conductivity: 0.37 # [W/m/°C] Tissue Properties DB 
    specific_heat_capacity: 3391 # [J/kg/°C] Tissue Properties DB
  skull_trabecular: # trabecular bone
    sound_speed: 2300 # [m/s], ITRUSST benchmarks 
    density: 1700 # [kg/m^3], ITRUSST benchmarks
    alpha_0_true: 13.3 # k-Plan, Pinton et al., 2011
    alpha_power_true: 1 # k-Plan
    thermal_conductivity: 0.32 # [W/m/°C] Tissue Properties DB 
    specific_heat_capacity: 1313 # [J/kg/°C] Tissue Properties DB
  skull_cortical: # cortical bone
    sound_speed: 2800 # [m/s], ITRUSST benchmarks 
    density: 1850 # [kg/m^3], ITRUSST benchmarks
    alpha_0_true: 13.3 # k-Plan, Pinton et al., 2011
    alpha_power_true: 1 # k-Plan
    thermal_conductivity: 0.32 # [W/m/°C] Tissue Properties DB 
    specific_heat_capacity: 1313 # [J/kg/°C] Tissue Properties DB

# Radius of the target area around the focus in which the ISPPA is averaged for the outputs
focus_area_radius: 5 # [mm]

# Default parameters for thermal simulations
thermal:
  duty_cycle: 1 # share of the stimulation duration during which the stimulation is on [0 to 1] (trial length = duty_cycle * stim_duration)
  iti: 0.6 # [s] interval between the trials, from the start of one trial to the start of another
  n_trials: 12 # number of trials to simulate; the total simulated duration is then n_trials*iti seconds
  stim_duration: 0.6 # [s] stimulation duration within a trial
  # Pulse repetition frequency is not used since the cooling effects between these cycles are limited

  # These should only be changed if they don't meet the criteria described in "run_heating_simulations"
  sim_time_steps: 0.01 # [s] simulation time steps during the stimulation period
  post_stim_time_step_dur: 0.1 # post-stimulation (inter-trial) steps
  on_off_step_duration: 0.1 # duration of the on+off cycle (e.g., with a duty cycle of 0.3 and 0.01 s time steps for simulation, the whole on+off cycle will take 0.1 s)
  equal_steps: 0 # is the duration of the simulation steps equal for on and off steps? if not, it is computed based on the sim_time_steps * n_steps where n_steps is the needed number of on and off steps derived from the duty cycle
  
  # Optional parameters:
  temp_0: #[deg C] initial temperature
    water: 37
    skull: 36
    brain: 37
    skin: 35
    skull_trabecular: 37
    skull_cortical: 36
  sensor_xy_halfsize: 100 # maximum size of the sensor window in which the temperature is recorded (in grid units)
  record_t_at_every_step: 0 # should we record temperature for every time step _for the whole sensor window_ (memory intensive, turn off if you experience 'out of memory' issues)
 
# select PML size, the default one for 3D is 10 (PML is the layer used in
# kWaves to absorb waves reaching the end of the computational grid,
# http://www.k-wave.org/documentation/example_na_controlling_the_pml.php)
pml_size: 10

# Expansion factor for the cerebro-spinal fluid brain mask;
# if the mask ends up being too big, try reducing it
# (40 is the conservative default; the mask is dilated with csf_mask_expansion_factor/voxel_size_mm cubic kernel)
csf_mask_expansion_factor: 40

# Use the kwaveArray class for simulations
use_kWaveArray: 0

# Thresholds for smoothing the skull and other masks
skull_smooth_threshold: 0.35 # (higher threshold means thinner mask, lower threshold means thicker mask)
other_smooth_threshold: 0.5 # (higher threshold means thinner mask, lower threshold means thicker mask)

# To what extent the computational grid can be expanded in order to get lower prime numbers to (potentially) speed up computations
prime_factor_max_grid_expansion: 40

# Select which k-Wave code to run (see 'run_simulations' for more documentation)
#   MATLAB CPU code 'matlab_cpu'
#   MATLAB GPU code 'matlab_gpu'
#   C++ code (Interactive) 'cpp_interactive'
#   C++ code (Non-Interactive) 'cpp_noninteractive'
#   CUDA code 'cuda' (currently does not work at the Donders HPC, but 'matlab_gpu' works)
code_type: matlab_gpu 

# Only use this if you are using the Donders HPC
# If not, you would have to do some things by hand (currently it only affects SimNIBS segmentation)
using_donders_hpc: 1

# Segmentation software (current options are 'headreco' and 'charm')
segmentation_software: charm

# An optional path to LD_LIBRARY used during SimNIBS installation
# If you experience an `undefined symbol` error in `create_mesh_surf.cpython-39-x86_64-linux-gnu.so`, set the next line to your LD_LIBRARY location
#ld_library_path: /opt/gcc/7.2.0/lib64